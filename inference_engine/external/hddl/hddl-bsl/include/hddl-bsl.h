// Copyright (C) 2019 Intel Corporation
//
// SPDX-License-Identifier: Apache-2.0

#ifndef LIB_HDDL_BSL_H
#define LIB_HDDL_BSL_H

#if (defined(WINNT) || defined(_WIN32) || defined(_WIN64))
#include <windows.h>
#define BSL_EXPORT_API __declspec(dllexport)
#else
#define BSL_EXPORT_API
#endif

typedef int BSL_STATUS;

typedef enum { BSL_LOG_DEBUG, BSL_LOG_INFO, BSL_LOG_WARNING, BSL_LOG_ERROR, BSL_LOG_DUMMY } BslLogLevel_t;

#define BSL_SUCCESS (0)

#define BSL_ERROR_RESET_ALL_FAILED (-1)
#define BSL_ERROR_RESET_FAILED (-2)
#define BSL_ERROR_DROP_FAILED (-3)
#define BSL_ERROR_UNSUPPORTED_FUNCTION (-4)
#define BSL_ERROR_INVALID_DEVICE_TYPE (-5)
#define BSL_ERROR_INVALID_CFG_FILE (-6)
#define BSL_ERROR_CFG_OPEN_FAILED (-7)
#define BSL_ERROR_HDDL_INSTALL_DIR_NOT_PROVIDED (-8)
#define BSL_ERROR_HDDL_INSTALL_DIR_TOO_LONG (-9)
#define BSL_ERROR_HDDL_INSTALL_DIR_NOT_DIR (-10)
#define BSL_ERROR_MEMORY_ALLOC_FAILED (-11)
#define BSL_ERROR_STRNCPY (-12)
#define BSL_ERROR_CALLBACK_NOT_FOUND (-13)
#define BSL_ERROR_IOCTL_FAIL (-14)
#define BSL_ERROR_MEMORY_ERROR (-15)

#define BSL_ERROR_INVALID_DEVICE_ID (-20)
#define BSL_ERROR_NO_DEVICE_FOUND (-21)
#define BSL_ERROR_NO_HID_DEVICE_FOUND (-22)
#define BSL_ERROR_NO_IOEXPANDER_DEVICE_FOUND (-23)
#define BSL_ERROR_NO_MCU_DEVICE_FOUND (-24)

#define BSL_ERROR_HID_API_OPEN_FAILED (-31)

#define BSL_ERROR_OPEN_I2C_PERMISSION_DENIED (-41)
#define BSL_ERROR_OPEN_I2C_NO_SUCH_FILE (-42)
#define BSL_ERROR_OPEN_I2C_OUT_OF_RANGE (-43)
#define BSL_ERROR_OPEN_I2C (-44)

#define BSL_ERROR_I2C_INVALID_ADDRESS (-50)
#define BSL_ERROR_GATHER_ADAPTERS (-51)
#define BSL_ERROR_I2C_BUS_NAME_CONFLICT (-52)
#define BSL_ERROR_I2C_BUS_NOT_FOUND_CHECK_I801_DRIVER (-53)

#define BSL_ERROR_I2C_BUS_CreateFileW (-54)
#define BSL_ERROR_I2C_BUS_READ_FAIL (-55)
#define BSL_ERROR_I2C_BUS_WRITE_FAIL (-56)
#define BSL_ERROR_I2C_CHECK_FUNC_FIRST_ERROR (-57)
#define BSL_ERROR_I2C_CHECK_FUNC_SECOND_ERROR (-58)

#define BSL_ERROR_PCHGPIO_PCH_NOT_FOUND (-60)
#define BSL_ERROR_PCHGPIO_SBREG_BAR_NOT_IMPLEMENT (-61)
#define BSL_ERROR_PCHGPIO_CANT_HIDDEN_PCH (-62)
#define BSL_ERROR_PCHGPIO_CANT_OPEN_DEVMEM (-63)
#define BSL_ERROR_PCHGPIO_MMAP_FAILED (-64)

#define BSL_ERROR_CFG_PARSING_GET_NULL_OBJECT (-71)

typedef enum {
  BSL_DEVICE_TYPE_START = 0,

  I2C_START = 0,
  I2C_IOEXPANDER = 0,
  I2C_MCU = 1,
  I2C_LAST = 1,

  USB_START = 2,
  HID_F75114 = 2,
  USB_LAST = 2,

  // PCH_START=3,
  // PCH_C246=3,
  // PCH_LAST=3,

  BSL_DEVICE_TYPE_MAX = 3,
  DEVICE_INVALID_TYPE = 3
} BslDeviceType;

BSL_EXPORT_API BSL_STATUS hddl_set_log_level(BslLogLevel_t level);

BSL_EXPORT_API BSL_STATUS hddl_bsl_init();

BSL_EXPORT_API BSL_STATUS hddl_reset(int device_addr);

BSL_EXPORT_API BSL_STATUS hddl_reset_all();

BSL_EXPORT_API BSL_STATUS hddl_discard(int device_addr);

BSL_EXPORT_API BslDeviceType hddl_get_device();

BSL_EXPORT_API BSL_STATUS hddl_set_device(BslDeviceType device);

BSL_EXPORT_API void hddl_get_error_string(BSL_STATUS ec);

#endif /* LIB_HDDL_BSL_H */
