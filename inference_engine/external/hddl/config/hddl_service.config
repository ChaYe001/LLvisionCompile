{
  "service_settings":
  {
    "wait_seconds_before_exit":    -1,                                   // wait seconds before exit; if < 0, means no exit
    "mvnc_log_level":              3,                                    // log level of mvnc api
    "common_timeout":              3000,                                 // common timeout in milliseconds for mvnc
    "alloc_graph_timeout":         12000,                                // alloc graph timeout in milliseconds for mvnc
    "max_cached_graph_number":     4,                                    // max amount of graphs can be cached (not to be run at the same time) on the device at the same time
    "update_timetaken_interval":   1000,                                 // time interval in milliseconds between two timetaken updating operations
    "task_scheduler":              "polling",                            // task scheduling methods, options: {"fcfs", "polling"}
    "server_max_task_number":      2000,                                 // max waiting task number at service end
    "client_max_task_number":      0                                     // max task number at service end for each client; if 0, means no limit
  },

  "security_settings":
  {
    "user_group":                  "users"                               // user grouph which can acess service mutex files
  },

  "device_settings":
  {
    "device_vid":                  "0x03e7",                             // device USB vendor ID
    "device_pid":                  "0xf63b"                              // device USB product ID
  },

  "scheduler_config":
  [
    {
      "subclass":                    0,                                    // firmware interface subclass
      // Tag Scheduler
      "graph_tag_map":{                                                    // graph tag mapping, containing entry like: "graphTagA": 2
      },

      // Stream Scheduler
      "stream_device_number":        0,                                    // number of devices assigned to StreamScheduler

      // ByPass Scheduler
      "bypass_device_number":        0,                                    // number of devices assigned to ByPassScheduler

      // SGAD Scheduler
      "sgad_device_number":          0,                                    // number of devices assigned to SGADScheduler

      // Squeeze Scheduler
      "device_schedule_interval":    5000,                                 // scheduling interval (in milliseconds) between adjacent device scheduling operations
      "max_cycle_switch_out":        3,                                    // the switched out graph will be switched in after <~> round of scheduling, if the pending task number is not 0.
      "max_task_number_switch_out":  20                                    // the switched out graph will be switched in if pending task number exceeds <~> in next scheduling cycle (no matter how long it has been staying switched out).
    }
  ],

  "fake_device_settings":
  {
    "enable_fake_device":          false,                                // whether to use fake device for debugging
    "fake_device_number":          3,                                    // the amount of fake devices to use
    "queue_capacity":              10,                                   // max amout of inferences in queue for fake device
    "wait_timeout":                5000,                                 // wait timeout in milliseconds when calling loadTensor/getResult methods
    "alloc_graph_latency":         5,                                    // the average latency in milliseconds of allocating graph on fake device
    "load_tensor_latency":         5,                                    // the average latency in milliseconds of loading tensor on fake device
    "get_result_latency":          10,                                   // the average latency in milliseconds of getting result on fake device
    "latency_distribution_stddev": 1.0                                   // the standard deviation of normal distribution that latency on fake device obeys
  },

  "log_level":
  {
    "log_frequent":                "off",
    "log_debug":                   "off",
    "log_process":                 "off",
    "log_info":                    "on",
    "log_warn":                    "on",
    "log_error":                   "on",
    "log_fatal":                   "on"
  },

  "debug_settings":
  {
    "debug_service":               true,                                 // whether to display service related log information
    "graph_identity":              "hash",                               // the way to identify graph, options: {"name", "hash"}

    "debug_process":
    {
       "message_dispatcher":      "off",                                 // whether to display message dispatcher related debug information
       "client_manager":          "off",                                 // whether to display client manager related debug information
       "graph_manager":           "off",                                 // whether to display graph manager related debug information
       "task_manager":            "off",                                 // whether to display task manager related debug information
       "task_scheduler":          "off",                                 // whether to display task scheduler related debug information
       "device_manager":          "off",                                 // whether to display device manager related debug information
       "device_scheduler":        "off",                                 // whether to display device scheduler related debug information
       "device":                  "off",                                 // whether to display device related debug information
       "device_work_thread":      "off",                                 // whether to display device work thread related debug information
       "result_dispatcher":       "off",                                 // whether to display result dispatcher related debug information
       "change_operation":        "off",                                 // whether to display status change operation related debug information
       "graph_mapper":            "off",                                 // whether to display graph mapper related debug information
       "info_printer":            "off"                                  // whether to display info printer related debug information
    },

    "info_printer":
    {
       "enable":                  true,                                  // whether to turn on info printer
       "print_interval":          5000,                                  // the print interval in milliseconds
       "fps_buffer":              10000,                                 // compute fps with samples within 'fps_buffer' milliseconds.
       "utilize_buffer":          5000,                                  // compute utilziation with samples within 'utilize_buffer' milliseconds.
       "client_fps":              "off",                                 // whether to print each client's frame rate
       "device_fps":              "off",                                 // whether to print each device's working rate
       "service_fps":             "off",                                 // whether to print service's serving rate
       "graph_fps":               "off",                                 // whether to print each graph's process rate
       "device_utilization":      "off",                                 // whether to print each device's utilization
       "memory_usage":            "off",                                 // whether to print service's memory usage status

       "device_snapshot_mode":    "none",                                // the display mode for device snapshot, options: {"none", "base", "full"}
       "device_snapshot_style":   "table",                               // the display style for device snapshot, options: {"tape", "table"}
       "client_snapshot_mode":    "none",                                // the display mode for client snapshot, options: {"none", "base"}
       "client_snapshot_style":   "table",                               // the display style for client snapshot, options: {"table"}
       "graph_snapshot_mode":     "none",                                // the display mode for graph snapshot, options: {"none", "base"}
       "graph_snapshot_style":    "table",                               // the display style for graph snapshot, options: {"table"}
       "task_snapshot_mode":      "none",                                // the display mode for task snapshot, options: {"none", "base"}
       "task_snapshot_style":     "list"                                 // the display style for task snapshot, options: {"list"}
    }
  }
}
